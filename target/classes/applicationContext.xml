<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

<context:component-scan base-package="com.ice">
  <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/> <!-- springmvc扫描带注解的这里spring不扫描 -->
</context:component-scan>

<!-- spring的配置文件 与主要配置及业务逻辑有关的 -->
<!-- 数据源的控制    事务控制  xxx -->
<context:property-placeholder location="classpath:dbconfig.properties"/>
<!-- 引入log4j配置文件 引入*.properties属性文件  也可以上面改成* -->
<context:property-placeholder location="classpath:log4j.properties"/><!--  -->
<bean  id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
 <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
 <property name="driverClass"  value="${jdbc.driverClass}"></property>
 <property name="user" value="${jdbc.user}"></property>
 <property name="password" value="${jdbc.password}"></property>
</bean>


<!-- 配置和mybatis的整合 -->
<bean  id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <!--指定mybatis全局配置文件的位置  -->
    <property name="configLocation" value="classpath:mybatis-config.xml"></property>
    <!--数据源就是上面的数据源  -->
    <property name="dataSource" ref="pooledDataSource"></property>
    <!-- mapper 文件放的位置 -->
    <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
 </bean>
 
 <!-- 配置一个可以执行批量的sqlsession -->
 <bean  id="sqlsession" class="org.mybatis.spring.SqlSessionTemplate">
     <constructor-arg name="sqlSessionFactory" ref="SqlSessionFactory"> </constructor-arg>
     <constructor-arg name="executorType" value="BATCH"></constructor-arg>
 
 </bean>
 
 
 <!-- 配置扫描器 将mybatis接口的实现加入到ioc容器中    -->
 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
 <!--扫描所有dao接口的mapper的实现 加入到ioc容器中  -->
   <property name="basePackage" value="com.ice.dao"></property>
 </bean >
 
 <!--事务控制  -->
 <bean  id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="pooledDataSource"></property>  <!-- 说明数据源 -->
 </bean>
 <!-- 开启注解的事务，使用xml配置的形式的事务（比较重要的使用这个） -->
 <aop:config>
 <!-- 切入表达式   下面是所有的方法多少个参数都能切入事务-->
 <aop:pointcut expression="execution(* com.ice.service..*(..))" id="txPoint"/>
 <!-- 配置事务增强 -->
 <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
 </aop:config>
 <!-- 配置事务增强如何切入 -->
 <tx:advice id="txAdvice"  > <!-- 默认属性transaction-manager="transactionManager" -->
   <tx:attributes>
     <tx:method name="*"/>  <!--所有方法都是事务方法  -->
     <tx:method name="get*" read-only="true"/><!-- 以get开始的所有方法 -->
   </tx:attributes>
 </tx:advice>
 
</beans>
